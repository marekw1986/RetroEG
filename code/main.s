;
; File generated by cc65 v 2.17 - Git 535088fe
;
	.fopt		compiler,"cc65 v 2.17 - Git 535088fe"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_itoa
	.import		_utoa
	.import		_ultoa
	.import		_hd44780_init
	.import		_hd44780_putc
	.import		_hd44780_puts
	.import		_hd44780_gotoxy
	.import		_hd44780_clrscr
	.import		_mos6551_init
	.import		_mos6551_handle_rx
	.import		_mc6840_init
	.import		_millis
	.import		_uptime
	.import		_get_geiger_pulses
	.import		_get_geiger_usv
	.import		_m6242_init
	.import		_m6242_read_time_str
	.import		_m6242_read_date_str
	.import		_key_init
	.import		_key_update
	.import		_port_write
	.import		_port_set
	.import		_port_clr
	.import		_port_tgl
	.export		_main

.segment	"DATA"

_state:
	.word	$0000
_last_uptime:
	.dword	$00000000
_last_millis:
	.byte	$00
_backlight_timer:
	.byte	$00

.segment	"RODATA"

L00CE:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$00
L00C1	:=	L00CE+0
L0079	:=	L00CE+0
L00B6	:=	L00CE+0
L00A2	:=	L00CE+0
L0055:
	.byte	$50,$72,$6F,$6D,$69,$65,$6E,$69,$6F,$77,$61,$6E,$69,$65,$00
L009C:
	.byte	$20,$75,$53,$2F,$68,$00
L0065:
	.byte	$53,$74,$61,$74,$73,$00
L005D:
	.byte	$43,$7A,$61,$73,$00
L00AE:
	.byte	$20,$43,$50,$4D,$00
L00D4:
	.byte	$55,$3A,$20,$00

.segment	"BSS"

_key0:
	.res	5,$00
_key1:
	.res	5,$00
_key2:
	.res	5,$00
_key3:
	.res	5,$00
_buffer:
	.res	64,$00
_integer:
	.res	2,$00
_fraction:
	.res	2,$00
_cpmin:
	.res	2,$00
_siv:
	.res	4,$00

; ---------------------------------------------------------------
; void __near__ prepare_disp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_prepare_disp: near

.segment	"CODE"

	jsr     _hd44780_clrscr
	lda     _state
	ldx     _state+1
	cpx     #$00
	bne     L004E
	cmp     #$00
	beq     L00FC
	cmp     #$01
	beq     L0058
	cmp     #$02
	beq     L0060
	rts
L00FC:	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(L0055)
	ldx     #>(L0055)
	jmp     _hd44780_puts
L0058:	txa
	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(L005D)
	ldx     #>(L005D)
	jmp     _hd44780_puts
L0060:	txa
	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(L0065)
	ldx     #>(L0065)
	jmp     _hd44780_puts
L004E:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_disp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_disp: near

.segment	"CODE"

	lda     _state
	ldx     _state+1
	cpx     #$00
	beq     L00FE
	rts
L00FE:	cmp     #$00
	beq     L006C
	cmp     #$01
	jeq     L00FD
	cmp     #$02
	jeq     L00C9
	rts
L006C:	jsr     _get_geiger_pulses
	sta     _cpmin
	stx     _cpmin+1
	jsr     _get_geiger_usv
	sta     _siv
	stx     _siv+1
	ldy     sreg
	sty     _siv+2
	ldy     sreg+1
	sty     _siv+3
	lda     _siv+3
	sta     sreg+1
	lda     _siv+2
	sta     sreg
	ldx     _siv+1
	lda     _siv
	jsr     pusheax
	ldx     #$27
	lda     #$10
	jsr     tosudiv0ax
	sta     _integer
	stx     _integer+1
	lda     _siv+3
	sta     sreg+1
	lda     _siv+2
	sta     sreg
	ldx     _siv+1
	lda     _siv
	jsr     pusheax
	ldx     #$27
	lda     #$10
	jsr     tosumod0ax
	sta     _fraction
	stx     _fraction+1
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(L0079)
	ldx     #>(L0079)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     _integer
	ldx     _integer+1
	jsr     pushax
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _itoa
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     _hd44780_puts
	lda     #$2E
	jsr     _hd44780_putc
	lda     _fraction+1
	cmp     #$03
	bne     L0088
	lda     _fraction
	cmp     #$E8
L0088:	bcs     L0090
	lda     #$30
	jsr     _hd44780_putc
	lda     _fraction+1
	cmp     #$00
	bne     L008D
	lda     _fraction
	cmp     #$64
L008D:	bcs     L0090
	lda     #$30
	jsr     _hd44780_putc
	lda     _fraction+1
	cmp     #$00
	bne     L0092
	lda     _fraction
	cmp     #$0A
L0092:	bcs     L0090
	lda     #$30
	jsr     _hd44780_putc
L0090:	lda     _fraction
	ldx     _fraction+1
	jsr     pushax
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     _hd44780_puts
	lda     #<(L009C)
	ldx     #>(L009C)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	lda     #<(L00A2)
	ldx     #>(L00A2)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	lda     _cpmin
	ldx     _cpmin+1
	jsr     pushax
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     _hd44780_puts
	lda     #<(L00AE)
	ldx     #>(L00AE)
	jmp     _hd44780_puts
L00FD:	jsr     pusha
	txa
	jsr     _hd44780_gotoxy
	lda     #<(L00B6)
	ldx     #>(L00B6)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	jsr     _m6242_read_time_str
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	lda     #<(L00C1)
	ldx     #>(L00C1)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	jsr     _m6242_read_date_str
	jmp     _hd44780_puts
L00C9:	dea
	jsr     pusha
	txa
	jsr     _hd44780_gotoxy
	lda     #<(L00CE)
	ldx     #>(L00CE)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(L00D4)
	ldx     #>(L00D4)
	jsr     _hd44780_puts
	jsr     _uptime
	jsr     pusheax
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _ultoa
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jmp     _hd44780_puts

.endproc

; ---------------------------------------------------------------
; void __near__ key0_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key0_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	stz     _state
	stz     _state+1
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key1_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key1_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	lda     #$01
	sta     _state
	stz     _state+1
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key2_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key2_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	lda     #$02
	sta     _state
	stz     _state+1
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key3_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key3_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$90
	jsr     _port_write
	lda     #<(_key0)
	ldx     #>(_key0)
	jsr     pushax
	lda     #$04
	jsr     pusha
	lda     #<(_key0_func)
	ldx     #>(_key0_func)
	jsr     _key_init
	lda     #<(_key1)
	ldx     #>(_key1)
	jsr     pushax
	lda     #$08
	jsr     pusha
	lda     #<(_key1_func)
	ldx     #>(_key1_func)
	jsr     _key_init
	lda     #<(_key2)
	ldx     #>(_key2)
	jsr     pushax
	lda     #$10
	jsr     pusha
	lda     #<(_key2_func)
	ldx     #>(_key2_func)
	jsr     _key_init
	lda     #<(_key3)
	ldx     #>(_key3)
	jsr     pushax
	lda     #$20
	jsr     pusha
	lda     #<(_key3_func)
	ldx     #>(_key3_func)
	jsr     _key_init
	lda     #$82
	sta     $6603
	jsr     _mc6840_init
	jsr     _m6242_init
	jsr     _mos6551_init
	jsr     _hd44780_init
	jsr     _prepare_disp
	cli
L0026:	jsr     _uptime
	jsr     pusheax
	lda     _last_uptime+3
	sta     sreg+1
	lda     _last_uptime+2
	sta     sreg
	ldx     _last_uptime+1
	lda     _last_uptime
	jsr     tosneeax
	beq     L002A
	jsr     _uptime
	sta     _last_uptime
	stx     _last_uptime+1
	ldy     sreg
	sty     _last_uptime+2
	ldy     sreg+1
	sty     _last_uptime+3
	jsr     _update_disp
L002A:	jsr     _millis
	sec
	sbc     _last_millis
	pha
	txa
	sbc     #$00
	pla
	cmp     #$0D
	bcc     L002F
	jsr     _millis
	sta     _last_millis
	lda     #$85
	jsr     _port_tgl
L002F:	lda     _backlight_timer
	beq     L0036
	jsr     _millis
	sec
	sbc     _backlight_timer
	pha
	txa
	sbc     #$00
	pla
	cmp     #$C9
	bcc     L0036
	lda     #$10
	jsr     _port_set
	stz     _backlight_timer
L0036:	lda     #<(_key0)
	ldx     #>(_key0)
	jsr     _key_update
	lda     #<(_key1)
	ldx     #>(_key1)
	jsr     _key_update
	lda     #<(_key2)
	ldx     #>(_key2)
	jsr     _key_update
	lda     #<(_key3)
	ldx     #>(_key3)
	jsr     _key_update
	jsr     _mos6551_handle_rx
	jmp     L0026

.endproc

