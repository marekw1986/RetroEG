;
; File generated by cc65 v 2.18 - Git b525554b
;
	.fopt		compiler,"cc65 v 2.18 - Git b525554b"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_utoa
	.import		_ultoa
	.import		_hd44780_init
	.import		_hd44780_putc
	.import		_hd44780_puts
	.import		_hd44780_gotoxy
	.import		_hd44780_clrscr
	.import		_mos6551_init
	.import		_mos6551_handle_rx
	.import		_mc6840_init
	.import		_millis
	.import		_uptime
	.import		_get_geiger_pulses
	.import		_m6242_init
	.import		_m6242_read_time_str
	.import		_m6242_read_date_str
	.import		_key_init
	.import		_key_update
	.import		_port_write
	.import		_port_set
	.import		_port_clr
	.import		_port_tgl
	.export		_main

.segment	"DATA"

_state:
	.byte	$00
_last_uptime:
	.dword	$00000000
_last_millis:
	.byte	$00
_backlight_timer:
	.byte	$00

.segment	"RODATA"

S000B:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$00
S000A	:=	S000B+0
S0005	:=	S000B+0
S0009	:=	S000B+0
S0007	:=	S000B+0
S0002:
	.byte	$50,$72,$6F,$6D,$69,$65,$6E,$69,$6F,$77,$61,$6E,$69,$65,$00
S0006:
	.byte	$20,$75,$53,$2F,$68,$00
S0004:
	.byte	$53,$74,$61,$74,$73,$00
S0003:
	.byte	$43,$7A,$61,$73,$00
S0008:
	.byte	$20,$43,$50,$4D,$00
S000C:
	.byte	$55,$3A,$20,$00

.segment	"BSS"

_key0:
	.res	5,$00
_key1:
	.res	5,$00
_key2:
	.res	5,$00
_key3:
	.res	5,$00

; ---------------------------------------------------------------
; void __near__ prepare_disp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_prepare_disp: near

.segment	"CODE"

	jsr     _hd44780_clrscr
	lda     _state
	beq     L0008
	cmp     #$01
	beq     L0005
	cmp     #$02
	beq     L0006
	rts
L0008:	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(S0002)
	ldx     #>(S0002)
	bra     L0007
L0005:	dea
	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(S0003)
	ldx     #>(S0003)
	bra     L0007
L0006:	lda     #$00
	jsr     pusha
	jsr     _hd44780_gotoxy
	lda     #<(S0004)
	ldx     #>(S0004)
L0007:	jmp     _hd44780_puts

.endproc

; ---------------------------------------------------------------
; void __near__ update_disp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_disp: near

.segment	"CODE"

	ldy     #$2A
	jsr     subysp
	lda     _state
	beq     L0004
	cmp     #$01
	jeq     L000E
	cmp     #$02
	jeq     L000C
	jmp     L0003
L0004:	jsr     _get_geiger_pulses
	ldy     #$20
	jsr     staxysp
	jsr     pushax
	lda     #$39
	jsr     tosumula0
	jsr     axulong
	ldy     #$26
	jsr     steaxysp
	ldy     #$29
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$27
	lda     #$10
	jsr     tosudiv0ax
	ldy     #$24
	jsr     staxysp
	ldy     #$29
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$27
	lda     #$10
	jsr     tosumod0ax
	ldy     #$22
	jsr     staxysp
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(S0005)
	ldx     #>(S0005)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	ldy     #$27
	jsr     pushwysp
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     sp
	ldx     sp+1
	jsr     _hd44780_puts
	lda     #$2E
	jsr     _hd44780_putc
	ldy     #$23
	lda     (sp),y
	cmp     #$03
	bne     L0006
	dey
	lda     (sp),y
	cmp     #$E8
L0006:	bcs     L0009
	lda     #$30
	jsr     _hd44780_putc
	ldy     #$23
	lda     (sp),y
	cmp     #$00
	bne     L0008
	dey
	lda     (sp),y
	cmp     #$64
L0008:	bcs     L0009
	lda     #$30
	jsr     _hd44780_putc
	ldy     #$23
	lda     (sp),y
	cmp     #$00
	bne     L000A
	dey
	lda     (sp),y
	cmp     #$0A
L000A:	bcs     L0009
	lda     #$30
	jsr     _hd44780_putc
L0009:	ldy     #$25
	jsr     pushwysp
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     sp
	ldx     sp+1
	jsr     _hd44780_puts
	lda     #<(S0006)
	ldx     #>(S0006)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	lda     #<(S0007)
	ldx     #>(S0007)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	ldy     #$23
	jsr     pushwysp
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     sp
	ldx     sp+1
	jsr     _hd44780_puts
	lda     #<(S0008)
	ldx     #>(S0008)
	bra     L000D
L000E:	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(S0009)
	ldx     #>(S0009)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	jsr     _m6242_read_time_str
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	lda     #<(S000A)
	ldx     #>(S000A)
	jsr     _hd44780_puts
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _hd44780_gotoxy
	jsr     _m6242_read_date_str
	bra     L000D
L000C:	dea
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(S000B)
	ldx     #>(S000B)
	jsr     _hd44780_puts
	lda     #$01
	jsr     pusha
	dea
	jsr     _hd44780_gotoxy
	lda     #<(S000C)
	ldx     #>(S000C)
	jsr     _hd44780_puts
	jsr     _uptime
	jsr     pusheax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _ultoa
	lda     sp
	ldx     sp+1
L000D:	jsr     _hd44780_puts
L0003:	ldy     #$2A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ key0_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key0_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	stz     _state
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key1_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key1_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	lda     #$01
	sta     _state
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key2_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key2_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	lda     #$02
	sta     _state
	jsr     _prepare_disp
	jmp     _update_disp

.endproc

; ---------------------------------------------------------------
; void __near__ key3_func (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key3_func: near

.segment	"CODE"

	lda     #$10
	jsr     _port_clr
	jsr     _millis
	sta     _backlight_timer
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$90
	jsr     _port_write
	lda     #<(_key0)
	ldx     #>(_key0)
	jsr     pushax
	lda     #$04
	jsr     pusha
	lda     #<(_key0_func)
	ldx     #>(_key0_func)
	jsr     _key_init
	lda     #<(_key1)
	ldx     #>(_key1)
	jsr     pushax
	lda     #$08
	jsr     pusha
	lda     #<(_key1_func)
	ldx     #>(_key1_func)
	jsr     _key_init
	lda     #<(_key2)
	ldx     #>(_key2)
	jsr     pushax
	lda     #$10
	jsr     pusha
	lda     #<(_key2_func)
	ldx     #>(_key2_func)
	jsr     _key_init
	lda     #<(_key3)
	ldx     #>(_key3)
	jsr     pushax
	lda     #$20
	jsr     pusha
	lda     #<(_key3_func)
	ldx     #>(_key3_func)
	jsr     _key_init
	lda     #$82
	sta     $6603
	jsr     _mc6840_init
	jsr     _m6242_init
	jsr     _mos6551_init
	jsr     _hd44780_init
	jsr     _prepare_disp
	cli
L0002:	jsr     _uptime
	jsr     pusheax
	lda     _last_uptime+3
	sta     sreg+1
	lda     _last_uptime+2
	sta     sreg
	ldx     _last_uptime+1
	lda     _last_uptime
	jsr     tosneeax
	beq     L0005
	jsr     _uptime
	sta     _last_uptime
	stx     _last_uptime+1
	ldy     sreg
	sty     _last_uptime+2
	ldy     sreg+1
	sty     _last_uptime+3
	jsr     _update_disp
L0005:	jsr     _millis
	sec
	sbc     _last_millis
	cmp     #$0D
	bcc     L0006
	jsr     _millis
	sta     _last_millis
	lda     #$85
	jsr     _port_tgl
L0006:	lda     _backlight_timer
	beq     L0007
	jsr     _millis
	sec
	sbc     _backlight_timer
	cmp     #$C9
	bcc     L0007
	lda     #$10
	jsr     _port_set
	stz     _backlight_timer
L0007:	lda     #<(_key0)
	ldx     #>(_key0)
	jsr     _key_update
	lda     #<(_key1)
	ldx     #>(_key1)
	jsr     _key_update
	lda     #<(_key2)
	ldx     #>(_key2)
	jsr     _key_update
	lda     #<(_key3)
	ldx     #>(_key3)
	jsr     _key_update
	jsr     _mos6551_handle_rx
	jmp     L0002

.endproc

