;
; File generated by cc65 v 2.18 - Git b525554b
;
	.fopt		compiler,"cc65 v 2.18 - Git b525554b"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_key_init
	.export		_key_update
	.export		_port_write
	.export		_port_set
	.export		_port_clr
	.export		_port_tgl
	.import		_millis

.segment	"DATA"

_port_cache:
	.byte	$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ key_init (struct key *key, unsigned char pin, void (*push_proc)(void))
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key_init: near

.segment	"CODE"

	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	sta     (ptr1)
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	ldy     #$02
	sta     (ptr1),y
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	ldy     #$01
	sta     (ptr1),y
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	ldy     #$03
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ key_update (struct key *key)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key_update: near

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	and     $6300
	jsr     bnega
	jsr     pusha
	lda     (sp)
	sta     sreg
	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	cmp     sreg
	beq     L0002
	lda     (sp)
	beq     L0003
	ldy     #$04
	jsr     pushwysp
	jsr     _millis
	ldy     #$02
	jsr     staspidx
	bra     L0005
L0003:	iny
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	beq     L000D
	jsr     _millis
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	jsr     tossuba0
	cmp     #$04
	bcc     L0005
	ldy     #$02
	jsr     ldaxysp
	ldy     #$03
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L0009
	ldy     #$02
	jsr     ldaxysp
	ldy     #$04
	jsr     ldaxidx
	jsr     callax
L0009:	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	ldy     #$02
	sta     (ptr1),y
L0005:	ldy     #$02
L000D:	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (sp)
	ldy     #$01
	sta     (ptr1),y
L0002:	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_write (unsigned char data)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_write: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_set (unsigned char data)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_set: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	ora     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_clr (unsigned char data)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_clr: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	eor     #$FF
	and     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_tgl (unsigned char data)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_tgl: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	eor     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

