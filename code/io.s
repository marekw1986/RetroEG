;
; File generated by cc65 v 2.17 - Git 535088fe
;
	.fopt		compiler,"cc65 v 2.17 - Git 535088fe"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_key_init
	.export		_key_update
	.export		_port_write
	.export		_port_set
	.export		_port_clr
	.export		_port_tgl
	.import		_millis

.segment	"DATA"

_port_cache:
	.byte	$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ key_init (__near__ struct key *, unsigned char, __near__ __near__ function returning void *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key_init: near

.segment	"CODE"

	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	sta     (ptr1)
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	ldy     #$02
	sta     (ptr1),y
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	ldy     #$01
	sta     (ptr1),y
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	ldy     #$03
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ key_update (__near__ struct key *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key_update: near

.segment	"BSS"

L000C:
	.res	1,$00

.segment	"CODE"

	jsr     pushax
	lda     $6300
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     tosanda0
	jsr     bnega
	sta     L000C
	lda     L000C
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     tosicmp0
	beq     L0011
	lda     L000C
	beq     L0014
	jsr     pushw0sp
	jsr     _millis
	ldy     #$02
	jsr     staspidx
	bra     L001D
L0014:	jsr     _millis
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	jsr     tossuba0
	cmp     #$04
	bcc     L001D
	jsr     ldax0sp
	ldy     #$03
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L001D
	jsr     ldax0sp
	ldy     #$04
	jsr     ldaxidx
	jsr     callax
L001D:	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     L000C
	ldy     #$01
	sta     (ptr1),y
L0011:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_write (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_write: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_set (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_set: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	ora     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_clr (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_clr: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	eor     #$FF
	and     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ port_tgl (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_port_tgl: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	eor     _port_cache
	sta     _port_cache
	sta     $7C00
	jmp     incsp1

.endproc

